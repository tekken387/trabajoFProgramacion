/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.Cliente;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author David
 */
public class GestionClientes extends javax.swing.JFrame {

   private Cliente[] ltaClientes=null;
   Principal p=new Principal();
   DefaultTableModel tableModel;
   int proceso=0; //0 nada - 1 guardar nuevo - 2 actualizar
   
   public Cliente[] getLtaClientes() {
        return ltaClientes;
    }

    public void setLtaClientes(Cliente[] ltaClientes) {
        this.ltaClientes = ltaClientes;
    }
   
    public GestionClientes() {
        initComponents();
        tableModel = (DefaultTableModel) tableClientes.getModel();
        
    }
    
    public int cuentaClientes(){
        int nclientes=0;
        for (int i = 0; i < ltaClientes.length; i++) {
            if(ltaClientes[i]!=null){
                nclientes++;
            }
        }
        return nclientes;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClientes = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        btnBuscarId = new javax.swing.JButton();
        btnBuscarNombre = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID:");

        txtId.setEnabled(false);
        txtId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdFocusLost(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("GESTION DE CLIENTES");

        jLabel3.setText("NOMBRE:");

        txtNombre.setEnabled(false);
        txtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreFocusLost(evt);
            }
        });

        jLabel4.setText("DIRECCION:");

        txtDireccion.setEnabled(false);

        jLabel5.setText("TELEFONO:");

        txtTelefono.setEnabled(false);
        txtTelefono.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefonoFocusLost(evt);
            }
        });

        tableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOMBRE", "DIRECCION", "TEEFONO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableClientes.setColumnSelectionAllowed(true);
        tableClientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        tableClientes.getTableHeader().setReorderingAllowed(false);
        tableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableClientes);
        tableClientes.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        btnEditar.setText("Editar");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnListar.setText("Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnBuscarId.setText("?");
        btnBuscarId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarIdActionPerformed(evt);
            }
        });

        btnBuscarNombre.setText("?");
        btnBuscarNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarNombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(btnBuscarId)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEliminar)
                        .addGap(10, 10, 10)
                        .addComponent(btnEditar)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar)
                        .addGap(18, 18, 18)
                        .addComponent(btnNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(btnListar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuscarNombre))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarId))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btnBuscarNombre))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnEditar)
                    .addComponent(btnNuevo)
                    .addComponent(btnEliminar)
                    .addComponent(btnListar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        
        switch(this.proceso){
            case 1:
                this.nuevo();      
                break;
                
            case 2:
                this.actualizar();
                btnEliminar.setEnabled(false);
                btnEditar.setEnabled(false);
                break;

        }
        this.proceso=0;
        tableModel.setRowCount(0);
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    public void nuevo(){
        Cliente c=new Cliente();
        String direccion=txtDireccion.getText();
        String id=txtId.getText();
        String nombre=txtNombre.getText();
        String telefono=txtTelefono.getText();
        int pos=this.cuentaClientes();
        
        if(!"".equals(direccion) && !"".equals(nombre) && !"".equals(telefono)){
            c.setDireccion(direccion);
            c.setId(Integer.parseInt(id));
            c.setNombre(nombre);
            c.setTelefono(telefono);
            ltaClientes[pos]=c;
            
            //lo guardamos en la ventana principal para poder manejarlo en cualquier ventana  
            p.setLtaClientes(ltaClientes);
            JOptionPane.showMessageDialog(this,"Cliente guardado correctamente....");
            
            txtDireccion.setText("");
            txtId.setText("");
            txtNombre.setText("");
            txtTelefono.setText("");
            estadoElementosNuevo(false);
        }
    }
    
    public void actualizar(){
        String direccion=txtDireccion.getText();
        String id=txtId.getText();
        String nombre=txtNombre.getText();
        String telefono=txtTelefono.getText();
        
        
        if(!"".equals(direccion) && !"".equals(nombre) && !"".equals(telefono) && id.matches("([0-9]+)")){

            
            for(Cliente c:ltaClientes){
                    if(c.getId()==Integer.parseInt(id)){
                        c.setDireccion(direccion);
                        c.setId(Integer.parseInt(id));
                        c.setNombre(nombre);
                        c.setTelefono(telefono);
                        break;
                    }
            }


            //lo guardamos en la ventana principal para poder manejarlo en cualquier ventana  
            p.setLtaClientes(ltaClientes);
            JOptionPane.showMessageDialog(this,"Cliente actualizado correctamente....");

            this.limpiaTxt();
            
            this.estadoElementosActualizar(false);
            
        }else{
            JOptionPane.showMessageDialog(this,"Error en los datos ingresados...");
        }
        
    }
    
    public void eliminar(){
        String id=txtId.getText();
        
        for(int i=0;i<ltaClientes.length;i++){
            if(ltaClientes[i]!=null){
                if(ltaClientes[i].getId()==Integer.parseInt(id)){
                    for(int j=i;j<ltaClientes.length-1;j++){
                        ltaClientes[j]=ltaClientes[j+1]; 
                    }
                    break;
                }
            }
        }
        
        ltaClientes[ltaClientes.length-1]=null;
        tableModel.setRowCount(0);
        p.setLtaClientes(ltaClientes);
        JOptionPane.showMessageDialog(this,"Se Elimino Correctamente...");
        btnEliminar.setEnabled(false);
        btnEditar.setEnabled(false);
    }
    
    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
            
        if(this.cuentaClientes()<ltaClientes.length){
            this.limpiaTxt();
            this.estadoElementosNuevo(true);
            this.proceso=1;
        }else{
            JOptionPane.showMessageDialog(this,"Se alcanzo el tamaño maximo de clientes permitidos");
        }
        
    }//GEN-LAST:event_btnNuevoActionPerformed

    public void estadoElementosNuevo(boolean estado){
        txtDireccion.setEnabled(estado);
        txtId.setEnabled(estado);
        txtTelefono.setEnabled(estado);
        txtNombre.setEnabled(estado);
        btnGuardar.setEnabled(estado);
        btnNuevo.setEnabled(!estado);
    }
    
    public void estadoElementosActualizar(boolean estado){
        txtDireccion.setEnabled(estado);
        txtId.setEnabled(estado);
        txtTelefono.setEnabled(estado);
        txtNombre.setEnabled(estado);
        btnGuardar.setEnabled(estado);
        btnNuevo.setEnabled(!estado);
        btnEditar.setEnabled(!estado);
        btnEliminar.setEnabled(!estado);
    }
    
    public void limpiaTxt(){
        txtDireccion.setText("");
        txtId.setText("");
        txtNombre.setText("");
        txtTelefono.setText("");
    }
    
    
    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        
        tableClientes.clearSelection();
        tableModel.setRowCount(0);
        
        this.limpiaTxt();
        
        if(this.cuentaClientes()<1){
            JOptionPane.showMessageDialog(this,"No hay clientes para mostrar");
        }else{
            for(Cliente c:ltaClientes){
                Object[] data={c.getId(),c.getNombre(),c.getDireccion(),c.getTelefono()};
                tableModel.addRow(data);
            }

        }
        
        btnEliminar.setEnabled(false);
        btnEditar.setEnabled(false);
    }//GEN-LAST:event_btnListarActionPerformed

    private void tableClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableClientesMouseClicked
        DefaultTableModel data = (DefaultTableModel)tableClientes.getModel();
        
       int fila = tableClientes.getSelectedRow();
       
       txtId.setText(data.getValueAt(fila, 0).toString());
       txtNombre.setText(data.getValueAt(fila, 1).toString());
       txtDireccion.setText(data.getValueAt(fila, 2).toString());
       txtTelefono.setText(data.getValueAt(fila, 3).toString());
        
       btnEditar.setEnabled(true);
       btnEliminar.setEnabled(true);
    }//GEN-LAST:event_tableClientesMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        this.estadoElementosActualizar(true);
        this.proceso=2;     
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        this.eliminar();
        this.limpiaTxt();
        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarIdActionPerformed
        boolean find=false;
        if(this.cuentaClientes()>0){
            String s="";
                do{
                   s = (String)JOptionPane.showInputDialog(
                            this,
                            "Ingrese Id de cliente",
                            "Busqueda Id",
                            JOptionPane.PLAIN_MESSAGE);         

                }while(!s.matches("([1-9])+"));
        
            for(Cliente c:ltaClientes) {
                if(c.getId()==Integer.parseInt(s)){
                    JOptionPane.showMessageDialog(this,"Se encontro cliente...");
                    txtId.setText(String.valueOf(c.getId()));
                    txtNombre.setText(c.getNombre());
                    txtDireccion.setText(c.getDireccion());
                    txtTelefono.setText(c.getTelefono());
                    find=true;
                    break;
                }
            }
            
            if(!find){
                JOptionPane.showMessageDialog(this,"No se encontro cliente...");
            }
            
        }else{
            JOptionPane.showMessageDialog(this,"No hay clientes registrados.");
        }         
    }//GEN-LAST:event_btnBuscarIdActionPerformed

    private void btnBuscarNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarNombreActionPerformed
        boolean find=false;
        
        if(this.cuentaClientes()>0){
            String s="";
                do{
                   s = (String)JOptionPane.showInputDialog(
                            this,
                            "Ingrese Nombre de clientes",
                            "Busqueda Nombre",
                            JOptionPane.PLAIN_MESSAGE);         

                }while(!s.matches("([a-zA-Z])+"));
                
            for(Cliente c:ltaClientes) {
                if(c.getNombre().equals(s)){
                    JOptionPane.showMessageDialog(this,"Se encontro cliente...");
                    txtId.setText(String.valueOf(c.getId()));
                    txtNombre.setText(c.getNombre());
                    txtDireccion.setText(c.getDireccion());
                    txtTelefono.setText(c.getTelefono());
                    find=true;
                    break;
                }
            }
            
            if(!find){
                JOptionPane.showMessageDialog(this,"No se encontro cliente...");
            }
        }else{
            JOptionPane.showMessageDialog(this,"No hay clientes registrados...");
        }
        
        
    }//GEN-LAST:event_btnBuscarNombreActionPerformed

    public void buscarID(String id){
        int idCli = Integer.parseInt(id);
        for (int i = 0; i < getLtaClientes().length; i++) {
            if(idCli==getLtaClientes()[i].getId()){
                JOptionPane.showMessageDialog(this,"ID registrado");
                txtId.setText("");
                txtId.grabFocus();
            }
        }
        
    }
            
    private void txtIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdFocusLost
        if (!evt.isTemporary()) {
          String content = txtId.getText();
            if(!"".equals(content)){
                if (!content.matches("([0-9]{5})+") ) {
                    JOptionPane.showMessageDialog(this,"ID incorrecto");
                    txtId.setText("");
                    txtId.grabFocus();
                }else{
                    buscarID(content);
                    
                }
            } 
        }
    }//GEN-LAST:event_txtIdFocusLost

    private void txtTelefonoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoFocusLost
        if (!evt.isTemporary()) {
            String content = txtTelefono.getText();
            if(!"".equals(content)){
                if (!content.matches("([0-9]{9})+")) {
                    JOptionPane.showMessageDialog(this,"Telefono incorrecto");
                    txtTelefono.setText("");
                    txtTelefono.grabFocus();
                }
            }
        }
    }//GEN-LAST:event_txtTelefonoFocusLost

    private void txtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusLost
        if (!evt.isTemporary()) {
            String content = txtNombre.getText();
            if(!"".equals(content)){
                if (!content.matches("([A-Z a-z])+")) {
                    JOptionPane.showMessageDialog(this,"Nombre incorrecto");
                    txtNombre.setText("");
                    txtNombre.grabFocus();
                }
            }
            
        }
    }//GEN-LAST:event_txtNombreFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GestionClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GestionClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GestionClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GestionClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GestionClientes().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarId;
    private javax.swing.JButton btnBuscarNombre;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableClientes;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
